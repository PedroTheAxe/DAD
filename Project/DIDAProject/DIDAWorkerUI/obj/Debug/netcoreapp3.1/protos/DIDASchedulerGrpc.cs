// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/DIDAScheduler.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class DIDASchedulerService
{
  static readonly string __ServiceName = "DIDASchedulerService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDASendRequest> __Marshaller_DIDASendRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDASendRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDASendReply> __Marshaller_DIDASendReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDASendReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAPreviousOpRequest> __Marshaller_DIDAPreviousOpRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAPreviousOpRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAPreviousOpReply> __Marshaller_DIDAPreviousOpReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAPreviousOpReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDANotifyCrashWorkerRequest> __Marshaller_DIDANotifyCrashWorkerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDANotifyCrashWorkerRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDANotifyCrashWorkerReply> __Marshaller_DIDANotifyCrashWorkerReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDANotifyCrashWorkerReply.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAWorkerDelayRequest> __Marshaller_DIDAWorkerDelayRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAWorkerDelayRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::DIDAWorkerDelayReply> __Marshaller_DIDAWorkerDelayReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::DIDAWorkerDelayReply.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDASendRequest, global::DIDASendReply> __Method_send = new grpc::Method<global::DIDASendRequest, global::DIDASendReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "send",
      __Marshaller_DIDASendRequest,
      __Marshaller_DIDASendReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDAPreviousOpRequest, global::DIDAPreviousOpReply> __Method_previousVersion = new grpc::Method<global::DIDAPreviousOpRequest, global::DIDAPreviousOpReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "previousVersion",
      __Marshaller_DIDAPreviousOpRequest,
      __Marshaller_DIDAPreviousOpReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDANotifyCrashWorkerRequest, global::DIDANotifyCrashWorkerReply> __Method_notifyCrashWorker = new grpc::Method<global::DIDANotifyCrashWorkerRequest, global::DIDANotifyCrashWorkerReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "notifyCrashWorker",
      __Marshaller_DIDANotifyCrashWorkerRequest,
      __Marshaller_DIDANotifyCrashWorkerReply);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::DIDAWorkerDelayRequest, global::DIDAWorkerDelayReply> __Method_sendWorkerDelay = new grpc::Method<global::DIDAWorkerDelayRequest, global::DIDAWorkerDelayReply>(
      grpc::MethodType.Unary,
      __ServiceName,
      "sendWorkerDelay",
      __Marshaller_DIDAWorkerDelayRequest,
      __Marshaller_DIDAWorkerDelayReply);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::DIDASchedulerReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of DIDASchedulerService</summary>
  [grpc::BindServiceMethod(typeof(DIDASchedulerService), "BindService")]
  public abstract partial class DIDASchedulerServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDASendReply> send(global::DIDASendRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDAPreviousOpReply> previousVersion(global::DIDAPreviousOpRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDANotifyCrashWorkerReply> notifyCrashWorker(global::DIDANotifyCrashWorkerRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::DIDAWorkerDelayReply> sendWorkerDelay(global::DIDAWorkerDelayRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Client for DIDASchedulerService</summary>
  public partial class DIDASchedulerServiceClient : grpc::ClientBase<DIDASchedulerServiceClient>
  {
    /// <summary>Creates a new client for DIDASchedulerService</summary>
    /// <param name="channel">The channel to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public DIDASchedulerServiceClient(grpc::ChannelBase channel) : base(channel)
    {
    }
    /// <summary>Creates a new client for DIDASchedulerService that uses a custom <c>CallInvoker</c>.</summary>
    /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public DIDASchedulerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
    {
    }
    /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected DIDASchedulerServiceClient() : base()
    {
    }
    /// <summary>Protected constructor to allow creation of configured clients.</summary>
    /// <param name="configuration">The client configuration.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected DIDASchedulerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDASendReply send(global::DIDASendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDASendReply send(global::DIDASendRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_send, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDASendReply> sendAsync(global::DIDASendRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDASendReply> sendAsync(global::DIDASendRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_send, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAPreviousOpReply previousVersion(global::DIDAPreviousOpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return previousVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAPreviousOpReply previousVersion(global::DIDAPreviousOpRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_previousVersion, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAPreviousOpReply> previousVersionAsync(global::DIDAPreviousOpRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return previousVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAPreviousOpReply> previousVersionAsync(global::DIDAPreviousOpRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_previousVersion, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDANotifyCrashWorkerReply notifyCrashWorker(global::DIDANotifyCrashWorkerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return notifyCrashWorker(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDANotifyCrashWorkerReply notifyCrashWorker(global::DIDANotifyCrashWorkerRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_notifyCrashWorker, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDANotifyCrashWorkerReply> notifyCrashWorkerAsync(global::DIDANotifyCrashWorkerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return notifyCrashWorkerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDANotifyCrashWorkerReply> notifyCrashWorkerAsync(global::DIDANotifyCrashWorkerRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_notifyCrashWorker, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAWorkerDelayReply sendWorkerDelay(global::DIDAWorkerDelayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendWorkerDelay(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::DIDAWorkerDelayReply sendWorkerDelay(global::DIDAWorkerDelayRequest request, grpc::CallOptions options)
    {
      return CallInvoker.BlockingUnaryCall(__Method_sendWorkerDelay, null, options, request);
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAWorkerDelayReply> sendWorkerDelayAsync(global::DIDAWorkerDelayRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
    {
      return sendWorkerDelayAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
    }
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual grpc::AsyncUnaryCall<global::DIDAWorkerDelayReply> sendWorkerDelayAsync(global::DIDAWorkerDelayRequest request, grpc::CallOptions options)
    {
      return CallInvoker.AsyncUnaryCall(__Method_sendWorkerDelay, null, options, request);
    }
    /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    protected override DIDASchedulerServiceClient NewInstance(ClientBaseConfiguration configuration)
    {
      return new DIDASchedulerServiceClient(configuration);
    }
  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(DIDASchedulerServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_send, serviceImpl.send)
        .AddMethod(__Method_previousVersion, serviceImpl.previousVersion)
        .AddMethod(__Method_notifyCrashWorker, serviceImpl.notifyCrashWorker)
        .AddMethod(__Method_sendWorkerDelay, serviceImpl.sendWorkerDelay).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, DIDASchedulerServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_send, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDASendRequest, global::DIDASendReply>(serviceImpl.send));
    serviceBinder.AddMethod(__Method_previousVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDAPreviousOpRequest, global::DIDAPreviousOpReply>(serviceImpl.previousVersion));
    serviceBinder.AddMethod(__Method_notifyCrashWorker, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDANotifyCrashWorkerRequest, global::DIDANotifyCrashWorkerReply>(serviceImpl.notifyCrashWorker));
    serviceBinder.AddMethod(__Method_sendWorkerDelay, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DIDAWorkerDelayRequest, global::DIDAWorkerDelayReply>(serviceImpl.sendWorkerDelay));
  }

}
#endregion
