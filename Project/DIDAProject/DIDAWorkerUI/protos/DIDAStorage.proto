syntax = "proto3";

/* this service specifies how to access the storage */
service DIDAStorageService {
  rpc read(DIDAReadRequest) returns (DIDARecordReply);
  rpc write(DIDAWriteRequest) returns (DIDAVersion);
  rpc updateIfValueIs(DIDAUpdateIfRequest) returns (DIDAVersion);
  rpc listServer(DIDAListServerRequest) returns (DIDAListServerReply);
  rpc updateServerId(DIDAUpdateServerIdRequest) returns (DIDAUpdateServerIdReply);
  rpc replicate(DIDAReplicationRequest) returns (DIDAReplicationReply);
  rpc notifyCrashStorage(DIDANotifyCrashStorageRequest) returns (DIDANotifyCrashStorageReply);
}

message DIDAReadRequest {
    string id = 1;  // the id of the object being read
    DIDAVersion version = 2;
}

message DIDARecordReply {
    string id = 1;
    DIDAVersion version = 2;
    string val = 3;
}

message DIDAListServerRequest {
    string request = 1;
}

message DIDAListServerReply {
    string ack = 1;
}

message DIDAVersion {
    int32 versionNumber = 1;
    int32 replicaId = 2;
}

message DIDAWriteRequest {
    string id = 1;
    string val = 2;
}

message DIDAUpdateIfRequest {
    string id = 1;
    string oldvalue = 2;
    string newvalue = 3;
}

message DIDAUpdateServerIdRequest {
    string serverId = 1;
    repeated string storageNodes = 2;
    string gossipDelay = 3;
}

message DIDAUpdateServerIdReply {
    string ack = 1;
}

message DIDAReplicationRequest {
    repeated DIDAWriteLog writeLog = 1;
    repeated DIDAUpdateLog updateLog = 2;
}

message DIDAReplicationReply {
    string ack = 1;
}

message DIDAWriteLog { 
    DIDARecordInfo record = 1;
    DIDAWriteRequest request = 2;
}

message DIDAUpdateLog { 
    DIDARecordInfo record = 1;
    DIDAUpdateIfRequest request = 2;
}

message DIDARecordInfo {
    string id = 1;
    DIDAVersion version = 2;
}

message DIDANotifyCrashStorageRequest {
    string serverId = 1;
}

message DIDANotifyCrashStorageReply {
    string ack = 1;
}